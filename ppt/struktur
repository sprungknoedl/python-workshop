=== 1. Termin ===

Vorraussetzungen: Grundlagen Programmieren (nur imperativ, kein OOP)

0. Start, Erklaerung des heutigen Ziels
  0.1 "import antigravity"
1. Syntax
  1.1 Kontrolstrukturen
  1.2 Variablen + Standard Python Datentypen
  1.3 Funktionen
2. Warum Python Awesome ist:
  2.1 Coding Style
  2.2 from __future__ import braces
  2.3 "Code like a Pythonista" Beispiele
  2.4 ALLES ist ein Objekt
  2.5 Zen of Python, "import this"
3. Standard Library
  3.1 Module importieren
  3.2 sys (parameter einlesen, basic informationen auslesen)
  3.3 os, os.path (path handling, 
  3.4 Hilfe zur Selbsthilfe (help(), pydoc, online doku)
4. I/O auf Dateien, stdin/out/err
5. Beispiel
6. re Modul
7. Beispiel


=== 2. Termin ===

Vorraussetzungen: Grundlagen Programmieren, sowohl imperativ als auch OOP
Verweis auf "How to speak HTTP" Slides

* Object Orientation in Python
  - EVERYTHING is an object
  - public/private
  - dynamic typing, duck typing (or why java-style interfaces suck)
  - Vererbung (multiple --> as said, first parent class wins)
  - Klassen definieren
    - Konstruktor __init__(self, ...)
    - special methods (__*__)
* cheeseshop, easy_install, pip
* Advanced/Third-Party Libraries
  - SSH: paramiko
  - HTTP: mechanize
  - kurz anschneiden
    - BeautifulSoup
    - DB API
    - Twisted
    - Django
    - Threading, Multiprocess


=== Beispiel ===

am 1.Termin
1. File Komplett einlesen
  1.1 Wort fuer Wort, nach @ suchen
  1.2 Vorschlaege einholen, wie mans besser machen koennte
  1.3 mit Regex
  1.4 uebergrosse Datei einlesen, so dass es mal kracht, "Aus Fehlern lernt man"
2. Zeilenweise einlesen
3. Anmerkungen um selbst weiterzuarbeiten:
    Emails ueber mehrere Zeilen
    obfuscated Emails erkennen (mehrere Regex)
		user (at) example (dot) com
		user at example dot com
		...

am 2.Termin
4. Website fetchen mit urllib
5. Website crawlen mit mechanize
6. Ergebnisse per SSH/SFTP auf server speicher?
6. Ergebnisse im IRC posten (BOTNETT!!!! :) )?